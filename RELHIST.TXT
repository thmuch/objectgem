Dies ist die Release-History von ObjectGEM. In Klammern ist das
Datum der Verîffentlichung angegeben, dahinter die PP-Version,
mit der die jeweilige ObjectGEM-Version _entwickelt_ wurde. Wenn
Probleme mit Ñlteren Versionen auftreten (z.B. fehlende Konstanten
etc.), wÑre ich fÅr eine genaue Fehlermeldung dankbar.

ACHTUNG: Unter Falcon-RAM-(Boot-)TOS-Versionen ist es nicht
         mîglich, im PP-Editor Programme zu starten. Dies
         liegt am TOS oder an PP, aber _nicht_ an ObjectGEM.
         Abhilfe: Ein entsprechendes ROM-TOS verwenden.

Bekannte Bugs:
- auûer unter MultiTOS wird bei Accessories der Programmname u.U.
  nicht korrekt erkannt
- in kleinen Farbauflîsungen werden einige Dialogelemente immer
  noch nicht korrekt gezeichnet
- VDI-Font kann die Darstellung der Resourcen durcheinanderbringen


Version 1.20 (29.10.1994, comp. mit PP vom 04.05.94)
- wie angekÅndigt wird von ObjectGEM-Programmen kein individueller
  Cookie mehr angelegt; dadurch wurde bei TApplication.Init der öber-
  gabeparameter AnID sowie das Feld TApplication.ID ÅberflÅssig (!)
- auûerdem wurden GP und UpdateGPValues entfernt (!)
- dafÅr besitzt nun jedes Fenster mit vdiHandle eine eigene virtuelle
  Workstation; Dialoge verwenden durch öberschreiben von GetVDIHandle
  weiterhin die globale Workstation
- zusÑtzlich gibt es TWindow.SetupVDI, die TWindow-Felder workIn und
  workOut, Attr.sysFonts und Attr.addFonts sowie die neue Konstante
  ws_ex_LoadFonts
- in TGEMAttr und TWindowAttr gibt es nun die Felder charWidth,
  charHeight, boxWidth und boxHeight
- neue Methoden TApplication.AVSendKey und VAStart; auûerdem verschickt
  HandleKeybd AV_SENDKEY, wenn die Taste nicht ausgewertet wurde
- TApplication.XAccKey wertet die Åbergebene Taste nun aus
- in TApplication.AVStartProg wird AV_STARTPROG ausgewertet
- TDialog.LoadDialog kopiert jetzt den Resource-Baum, so daû ein Dialog
  beliebig oft gleichzeitig verwendet werden kann; dafÅr wurde auch die
  Methode TDialog.FreeDialog notwendig
- neue TDialog-Methoden GetDefaultButton und SetDefaultButton
- TPopup.Init kopiert den Resource-Baum; dafÅr wurde TPopup.Done
  notwendig
- neue Methode TTextWindow.SetColor
- TTextWindow verwendet SetupVDI, dadurch wurden InitPaint und ExitPaint
  ÅberflÅssig
- neue Felder TApplication.MemoryProtection und Multitasking
- cs_UserToolbar heiût jetzt cs_WindowMenuToolbar
- der BubbleHelp-Cookie heiût jetzt 'BHLP'
- SetMouse heiût jetzt SetMousePos, da es die neuen Methoden SetMouse
  und GetMouse gibt
- TComboBox.Done gibt TComboBox.Edit wirklich frei
- aus irgend einem Grund haben Accessories unter AES<4.0 jetzt keine
  Probleme mit den Resourcen mehr!?!
- die PP-Code-Optimierung mit $Z ist ab sofort aufgrund offensichtlicher
  gravierender Fehler abgeschaltet

Version 1.17 (12.09.1994, comp. mit PP vom 04.05.94)
- mit TWindow.LoadMenu kînnen nun MenÅleisten im Fenster installiert
  werden; zur Verwaltung stehen ferner die Methoden FreeMenu, HandleMenu
  und MNSelected zur VerfÅgung
- TApplication.MNSelected fragt deshalb TWindow.EventList nicht mehr ab,
  wenn das Fenster eine eigene MenÅleiste besitzt
- damit sich die Anwender-konfigurierbaren Toolbars auf die MenÅleiste im
  selben Fenster beziehen, kann das Flag cs_UserToolbar gesetzt werden
- neue TToolbar-Methoden GetMenuIndex, SetMenuIndex und ClearMenuIndex
- TKeyMenu ist an Fenster-MenÅs angepaût
- TKeyMenu.SetText fÅllt den Åbergebenen Text evtl. mit Leerzeichen auf
- neues Objekt TComboBox fÅr Popup-MenÅs in Dialogen
- dafÅr neues Feld TApplication.Attr.PopChar
- mit den Methoden LoadIcon und FreeIcon und dem Feld Icon in TWindow
  und TApplication kann ein Icon fÅr das Icon-Fenster festgelegt werden
- mit id_No kann TPopup.Init zum ignorieren des Popup-Indexes gebracht
  werden; mit SetPopTree kann man dann im Speicher erzeugte Resourcen
  verwenden
- mit TPopup.ExitPop bzw. TPopup.KeyExit kann man Popup-MenÅs beenden
- TPopup.GetSelection und SetSelection zur Laufzeitsteuerung
- neue Methode Delete in TWindow, TDialog und TApplication
- neue Methode TEdit.Paint, damit der Eingabe-Cursor beachtet wird
- neue Methode TControl.SetShortCut
- bei GetMenuEntries kann man nun mit Full und Cycle (in TMenuEntries)
  festlegen, welche MenÅeintrÑge zu [<Shift>+]<Control>+<W> bzw.
  <Control>+#<*> gehîren
- TStatic und TEdit ermitteln nun TextLen bei G_[F][BOX]TEXT-Elementen
  automatisch, wenn -1 Åbergeben wird
- neue Routinen SetMouse, StrPLower und LowChar
- Kommentare in Profiles kînnen auch mit # beginnen; mit ## werden
  Kommentarblîcke begonnen und abgeschlossen
- neue System-Profile-Routinen WriteProfileInt, WriteProfileString,
  GetProfileInt und GetProfileString
- alle Profile-Routinen achten auf die neue Konstante as_UseHomeDir
- Funktion GetHomeDir zum Ermitteln des User-Home-Verzeichnisses
- PathExist beachtet auch Wurzelverzeichnisse
- TByteArray ist nun korrekt deklariert
- SC_CHANGED hat jetzt die Message-Nummer 80
- MapKey konnte u.U. einen Range-Check-Error verursachen
- Anwender-konfigurierbare Toolbars, die mit einem TToolbar-Objekt ver-
  knÅpft sind, funktionieren jetzt auch bei Tastaturanwahl
- Fensterdialoge verwenden keinen zusÑtzlichen Rahmen mehr
- cs_FullRedraw wird nur noch bei einer GrîûenÑnderung beachtet; von der
  Korrektur betroffen sind die TWindow-Methoden Move, Top und WMOnTop
- bei TCheckBox, TTriState und TRadioButton konnte es vorkommen, daû sich
  die Positionen der Buttons verschieben; damit das nicht mehr passiert,
  gibt es nun die Methode Deinstall in TButton und TCheckBox
- appl_getinfo wird "von Hand" aufgerufen, damit auch PP vom 28.04.93
  keine Probleme beim Compilieren macht
- unter MultiTOS werden Klicks in Popup-MenÅs schneller erkannt
- unter WINX kann man Fenster auch links aus dem Bildschirm schieben
- intern wird statt shel_envrn nun GetEnv verwendet; dafÅr wird aller-
  dings die Unit Dos wieder eingebunden
- mit ICFS sollte die Fenstergrîûe nun wirklich korrekt gesetzt werden...

Version 1.16 (18.07.1994, comp. mit PP vom 04.05.94)
- UnterstÅtzung von WINX ab Version 2.2
- dafÅr wurde TWindow.WMArrowed erweitert; die TWindow.WAxxxx-Methoden
  wurden entfernt (!), was aber keine Probleme bereiten dÅrfte
- auûerdem gibt es deswegen die TWindow-Methoden WMShaded und WMUnshaded
- modale Dialoge (und damit auch Alertboxen) unterstÅtzen beim Ver-
  schieben Let'em Fly; auûerdem wird der Dialog um den Mauscursor
  zentriert, wenn auûerhalb des Dialogs geklickt wurde
- Das MenÅ-Protokoll wird nun auch verschickt; dafÅr gibt es die Methode
  TApplication.GetMenuEntries sowie die Strukturen TMenuEntry und
  TMenuEntries; auûerdem wurde TApplication.SendWndMessage erweitert
- die Toolbar-Behandlung wurde so erweitert, daû Toolbar-Buttons vom An-
  wender mit MenÅeintrÑgen verknÅpft werden kînnen, ohne daû dafÅr ein
  TToolbar-Objekt verwendet werden muû; s. dazu die Online-Hilfe unter
  "Allgemeine Hinweise - Toolbars"
- neues Feld TWindow.IconClass mit der Methode GetIconWindowClass
- neue TApplication-Methode FirstApplication und NextApplication, mit
  denen (auf Grundlage des XAcc-Protokolls) eine Modularisierung des
  Systems erreicht werden kann
- neue TTextWindow-Methoden InitPrint und ExitPrint
- neue Konstante es_Undo, mit der der TEdit-Undo-Buffer ausgeschaltet
  werden kann
- TGroupBox verwendet in Farbauflîsungen nun einen 3D-Effekt
- TRangeValidator.IsValid schneidet evtl. vorhandene Leerzeichen vor
  der öberprÅfung ab
- bei TToolbar-Objekten wird nun SELECTABLE automatisch gesetzt
- TDialog.GetWindowClass setzt hbrBackground auf Null, d.h. der
  Hintergrund wird nicht mehr gelîscht, um Flackern zu vermeiden
- TClipboard.OpenClipboard verwendet zum Ermitteln des Klemmbrett-
  Pfades nun auch die Environment-Variablen CLIPBRD und SCRAPDIR
- der Datentyp von MapKey wurde auf word geÑndert
- TWindow.ChkMax wurde entfernt (!), ChkMin heiût nun ChkSize
- CBUpdate heiût nun SCChanged
- TKeyMenu zeichnet die MenÅleiste nicht mehr neu (war unnîtig)
- TApplication.RemoveDesktop lîscht den Desktop nur noch, wenn vorher
  InstallDesktop aufgerufen wurde; dadurch entfÑllt ein ÅberflÅssiger
  Redraw beim Programmende
- Icon-Fenster fÅhren kein Align auf Bytegrenze o.Ñ. mehr durch
- auch bei Fenstern mit maximaler Grîûe wird das Align nun beachtet
- wenn LoadResource die Datei nicht findet, wird die entsprechende
  Alertbox nun korrekt angezeigt
- TApplication.MUMesag leitet WM_CLOSED nur noch dann weiter, wenn das
  entsprechende Fenster einen CLOSER besitzt
- die Cursorsteuerung von TTextWindow lÑuft nicht mehr so stark nach
- unter WINX wird bei der ICFS-Iconification die Fenstergrîûe nun
  korrekt gesetzt
- Toolbars hatten Probleme, wenn cs_FullRedraw nicht gesetzt war;
  ist beseitigt (TWindow.UpdateDialog wurde deshalb erweitert)

Version 1.15 (10.06.1994, comp. mit PP vom 04.05.94)
- ein Jahr nach der ersten Version ist die Doku endlich fertig!!!
- Objekt TClipboard
- dafÅr neue Methode GetClipboard und zugehîriges Feld Clipboard in
  TEdit, TWindow und TApplication
- die Methoden Cut, Copy und Paste in TEdit sowie Paste in TTextWindow
  sind nun effektiv gemacht
- neue TApplication-Methoden Cut, Copy, Paste und SelectAll; die
  ersten drei werden von den entsprechenden TWindow-Methoden stan-
  dardmÑûig aufgerufen
- neue Konstante scs_BitbltScrolling, durch die TScroller ein opti-
  miertes Fensterscrolling durchfÅhrt; wird von TTextWindow genutzt
- TTextWindow setzt jetzt standardmÑûig ws_ex_ReadOnly
- neue Methode TEdit.Clear, die den Eingabecursor beachtet
- neue TTextWindow-Methode Clear, Print und PrintFilter
- neue TWindow-Methoden GetTitle und Print
- TApplication.SendWndMessage
- Funktion PathExist
- das MenÅ-Protokoll wird unterstÅtzt (z.Z. WM_CLOSED, WM_CUT, WM_COPY,
  WM_PASTE, WM_SELECTALL und WM_PRINT)
- TTextWindow.RealTabs wird nun wirklich auf true gesetzt
- bevor einem MultiTOS-Shutdown/Auflîsungwechsel zugestimmt wird,
  wird TApplication.CanClose aufgerufen
- einige Methoden wurden statisch gemacht (s.o.)

Version 1.14 (19.05.1994, comp. mit PP vom 04.05.94)
- Objekt TIcon
- dafÅr neue Methoden IconSelect, FirstIcon und NextIcon in den
  Objekten TWindow und TApplication
- TApplication.Rubbox wurde fÅr die Icon-Selektion erweitert
- neue Methode TEdit.SetState, die den Cursor beachtet
- neues Feld TEvent.Style mit den es_XXXX-Konstanten
- neue Routinen GetFilename, GetExtension
- neue Konstante cs_QuitOnClose, die das öberschreiben von WMClosed
  ÅberflÅsig macht
- neue Konstante as_XInputMode, mit der eine Mausposition-abhÑngige
  Eingabesteuerung eingeschaltet werden kann (wie unter X/Unix)
- Konstante as_DesktopWindow
- der TButton-3D-Effekt wurde etwas verbessert
- TTextWindow besitzt nun eine Tastatursteuerung
- neue Felder in TTextWindow: RealTabs, TabSize; neue Methoden Read,
  Cut, Copy, Paste, SelectAll und TabXpand
- neue Methoden Cut, Copy und Paste in TWindow und TDialog; in TWindow
  zusÑtzlich noch SelectAll
- cs_WorkBackground funktioniert nun unter _allen_ TOS-Versionen;
  in AES-Versionen unter 4.0 werden Doppelklicks mit der linken Maus-
  taste allerdings nicht erkannt; auûerdem wird ein Klick auf ein
  Fenster im Hintergrund erst nach dem Loslassen der Maustaste weiter-
  geleitet
- TApplication.MUButton wurde dafÅr intern (extrem) optimiert
- ein Fenster kann jetzt mit Doppelklick rechts getoppt werden (unter
  allen TOS-Versionen); Doppelklick links auf ein Fenster im Hinter-
  grund (MultiTOS) entfÑllt damit; einziges Problem unter alten AES-
  Versionen: rechte Mausklicks werden nur an die Applikation mit dem
  aktiven Fenster gemeldet
- cs_AutoOpen funktioniert auch bei TDialog
- appl_getinfo wird verwendet; dadurch ist ObjectGEM auch an Mag!X
  angepaût, da viele Informationen nun unabhÑngig von der AES-Version
  ermittelt werden kînnen
- die Felder UsrDef und UsrBlk wurden TControl zugewiesen; UsrBlk wurde
  auûerdem îffentlich gemacht
- TWindow.WMOnTop reagiert nun korrekt (ohne WMTopped aufzurufen)
- as_HandleShutdown wird nun korrekt ausgewertet
- Drag&Drop-Anfragen werden schneller erkannt
- Popup-MenÅs kînnen auch unter TOS 1.0 per Tastatur bedient werden
- die TestKey-Methoden von TKeyMenu und TToolbar behandeln jetzt beide
  <Shift>-Tasten gleichwertig; dafÅr gibt es die Konstante K_SHIFT
- neue Konstante K_NORMAL
- die Abfrage aller Standard-Fenster-Shortcuts (<Control>+<U> etc.)
  wurde nach TApplication.MUKeybd verlagert (ist jetzt schneller und
  belegt weniger Speicher); nach Auûen Ñndert sich nichts
- auûerdem wurde die fÅr [<Shift>+]<Control>+<W> zustÑndige Routine
  komplett neu geschrieben und sollte jetzt funktionieren
- TKeyMenu wertet VGHnd auch aus, wenn Application das Parent-Objekt
  ist; als Fensterhandle wird dann das oberste Fenster eingetragen;
  wenn WF_OWNER vorhanden ist, werden auch Nachrichten an Fenster
  fremder Applikationen verschickt
- TPopup reagiert auf Mausklicks jetzt wesentlich schneller
- mit Mag!X+Gemini konnte es immer noch zum Absturz kommen, was am
  falschen XAcc-Protokoll seitens Gemini (!) lag; ObjectGEM wertet nun
  nur noch solche XAcc-Meldungen aus, die logisch korrekte Pointer ver-
  wenden
- die UserDef-Objekte werden nun auch dann korrekt gezeichnet, wenn die
  Linienenden auf LE_SQUARED eingestellt sind
- in den TApplication-Methoden DDHeaderReply, DDReadData und DDReadArgs
  wurde die öbergabe-Position des Parameters WindID korrigiert (!)

Version 1.12 (14.04.1994, comp. mit PP vom 13.10.93)
- neues Objekt TTextWindow
- mit id_No kann TDialog.Init zum ignorieren des Dialog-Indexes
  gebracht werden; so kann man z.B. im Speicher erzeugte Resourcen
  verwenden
- Backdrop mit <Control>+</>, ICFS-Iconification mit <Control>+<3>
- neue Drag&Drop-Methoden DDReadArgs und DDFinished; DDReadData
  wurde um einen RÅckgabewert erweitert
- TDialog.ObjcPaint wurde erweitert, damit unter MultiTOS Status-
  anzeigen realisiert werden kînnen, die nicht den Bildschirm
  blockieren; auûerdem wird nun der Mauscursor korrekt behandelt
- dafÅr auch die neue Konstante wb_Lazy
- neue TControl-Methoden: Hide, Unhide, IsHidden, SetColor, GetColor
- neue Methode TEdit.SetColor
- neue Profile-Routinen OpenPrivateProfile, ClosePrivateProfile und
  SavePrivateProfile, die die Profile-Bearbeitung beschleunigen
- Routine GetTempDir, die das globale temporÑre Verzeichnis liefert;
  mit GetTempFilename kann ein passender Dateiname erzeugt werden
- GetPath als kleinerer "Ersatz" fÅr FSplit
- GetQSB liefert unter MultiTOS immer einen nil-Pointer
- neue Konstanten HSLIDER, VSLIDER, SLIDER
- das AV_EXIT-Bit in XAcc.AVSrvMsg wird nun gesetzt; auûerdem wird
  Environment-Variable AVSERVER korrekt erkannt
- cs_WorkBackground und ws_ex_Disabled funktionieren nun ab AES 4.0
- bei ICFS-Iconification konnte es vorkommen, daû die ursprÅngliche
  Fenstergrîûe nicht wieder exakt hergestellt wurde
- bei Drag&Drop wird der Dateityp nun korrekt ermittelt
- TSortedCollection.Insert gibt den alten Eintrag jetzt mit FreeItem
  frei, wenn der neue Eintrag den gleich SchlÅssel hat und Duplicates
  false ist
- TStatic.SetText produziert keine AbstÅrze mehr, wenn der Text nicht
  unterstrichen ausgegeben wird
- TApplication.InitGEM verwendet ParamCount/ParamStr nun korrekt
- unter Mag!X+Gemini sollte es dadurch nicht mehr zum Absturz kommen
- div. wind_set/wind_get-Calls achten jetzt darauf, ob das Fenster
  Åberhaupt erzeugt bzw. geîffnet wurde...

Version 1.11 (26.03.1994, comp. mit PP vom 13.10.93)
- ICFS-Iconification mit <Alternate>+CLOSER
- das AV-Protokoll wird nun unterstÅtzt; die Verwaltung erfolgt
  mit TXAccAttr in der XAccList; wenn ein AV-Server existiert,
  wird dessen AES-ID in TApplication.AVServer gespeichert;
  folgende Methoden sind neu in TApplication: AVInsert, AVExit,
  AVProtokoll, VAProtoStatus
- mit dem Objekt TToolbar und TWindow.LoadToolbar kînnen Toolbars
  in Fenstern verwaltet werden; da dies auch in TWindow-Objekten
  mîglich ist, muûte ein Kompromiû zwischen absoluter Objekt-
  orientierung und dem Nutzen gefunden werden (TToolbar benutzt
  Ñhnliche Methoden wie TControl, TKeyMenu und TDialog);
  neue Methoden in TWindow: WMToolbar, LoadToolbar, FreeToolbar;
  neues Feld TWndClass.ToolbarTree;
  neue Konstanten em_InvalidToolbar, cs_ToolbarOpposite
- TDialog.LoadDialog achtet zusÑtzlich darauf, ob der gewÅnschte
  Dialogbaum nicht evtl. schon als Toolbar verwendet wird
- unter kleinen Auflîsungen konnte es passieren, daû ein an sich
  korrektes MenÅ als zu groû abgewiesen wurde
- CheckBoxen und RadioButtons werden beim Aufruf von Disable
  sofort korrekt dargestellt
- TApplication.InitMainWindow verwendet nun TApplication.Name als
  Fenstertitel
- ein Fenster kann nun mit <Control>+<*> (statt <Control>+<F>)
  auf maximale Grîûe gebracht werden
- TWindow.GetFull lÑût das Fenster an der alten Position, wenn
  die volle Grîûe nicht dem Desktop entspricht (z.B. Dialoge)
- TWindow.SetCursor zum éndern der Mausform
- mit TWindow.FirstWorkRect und TWindow.NextWorkRect stehen zwei
  Methoden zum Durchlaufen der Fenster-Rechteckliste zur VerfÅgung
- TWindow.Done ruft FreeDialog und FreeToolbar auf
- die Methoden TWindow.Paint und TDialog.Paint rufen UpdateDialog
  nicht mehr auf; dies wird von WMRedraw Åbernommen (dadurch wird
  UpdateDialog nicht mehr fÅr jedes einzelne Rechteck der Rechteck-
  liste aufgerufen)
- mit cs_AutoOpen kann bestimmt werden, ob ein Fenster beim Neu-
  anlegen sofort geîffnet werden soll
- neue Methoden TWindow.InitPaint und TWindow.ExitPaint
- neue Methode TWindow.GetScroller, damit auch bei abgeleiteten
  Fensterobjekten ein TScroller-Objekt korrekt initialisiert wird
- bei TButton-Objekten wird Changed nur noch aufgerufen, wenn der
  Button wirklich angewÑhlt wurde; dafÅr muûte TDialog.CallChanged
  geringfÅgig erweitert werden
- TWindow.WMRedraw achtet jetzt auf ws_Open
- bei ObjectGEM-Accessories konnte es passieren, daû nicht alle
  anderen XAcc-Accessories erkannt wurden, da die XAccList intern
  einmal zu viel freigegeben wurde
- ein mysteriîser Bug, der bei einem Dialog, in dem ein TEdit-Objekt
  verwendet wurde, zum Absturz fÅhren konnte, sollte beseitigt sein

Version 1.10 (03.03.1994, comp. mit PP vom 13.10.93)
- ObjectGEM wurde in acht Units aufgeteilt (analog zu ObjectWindows)
- das Objekt TPXPictureValidator existiert wieder
- TDialog.WMClosed selektiert nun den Exit-Button; auûerdem kann ein
  Dialogfenster mit dem CLOSER nur noch geschlossen werden, wenn der
  zugehîrige Exit-Button enabled ist
- die Konstante KbDOWN fehlte
- neue Fehlernummer em_SpeedoLoadFailure
- die Kobold- sowie alle neuen AV-Protokoll-Konstanten sind vorhanden
- in Eingabefeldern wird pe_tvalid nîtigenfalls mit gÅltigen Eingabe-
  zeichen aufgefÅllt
- das Array pxya und der Record SysInfo sind nun îffentlich
- ab AES 4.10 vollautomatische Iconification, GetStyle setzt dazu
  zusÑtzlich der Wert SMALLER; neue TWindow-Methoden: IsIconified,
  WMIconify, WMUniconify, IconPaint, GetIconTitle; neue TApplication-
  Methoden: GetIconTitle, IsIconified, IconPaint
- unter MultiTOS halbautomatisches Drag&Drop, dafÅr muûten allerdings
  die Methoden TWindow.WMDragDrop, TApplication.APDragDrop sowie
  TApplication.HandleDragDrop geÑndert (!) werden; neue Methoden
  (jeweils in TWindow _und_ TApplication): DDGetPreferredTypes,
  DDGetPath, DDHeaderReply, DDReadData
- vollautomatische Verwaltung des XAcc-Protokolls, dafÅr wurden der
  Record TXAccAttr, die Felder TApplication.XAcc und .XAccList sowie
  die TApplication-Methoden GetXAccAttr, XAccID, XAccAcc, XAccExit,
  XAccText, XAccKey, XAccMeta, XAccIMG und XAccInsert eingefÅhrt;
  daraus folgt, daû an TApplication.HandleXAcc nur noch die Messages
  ACC_OPEN, ACC_CLOSE und ACC_ACK weitergereicht werden
- neue TWindow-Methoden ShutdownWindow, At, IndexOf, WMBottomed,
  WMRButton und SetGadgets
- neue TApplication-Methoden FindApplication, Broadcast, SHWDraw,
  CBUpdate, At, IndexOf und BubbleHelp
- die Anfangsgrîûe eines Fensters wird nicht mehr in der Init-Methode
  berechnet, sondern in TWindow.SetupSize bzw. TDialog.SetupSize
- TApplication.CanClose bzw. <Control>+<Q> funktionieren nun auch
  bei Accessories unter MultiTOS
- neue Konstante cs_AutoCreate mit den TWindow-Methoden CreateChildren,
  EnableAutoCreate und DisableAutoCreate
- rudimentÑre MetaDOS-UnterstÅtzung durch TMetaInfo und das Feld
  TApplication.MetaDOS
- neue Funktion GetDrives
- neue Routine UpChar; StrPUpper berÅcksichtigt dadurch Umlaute
- die Konstanten IDC_SIZE, IDC_NOTICE, IDC_UPARROW, IDC_SIZENWSE,
  IDC_SIZENESW, IDC_SIZENS, IDC_SIZEWE und IDC_ICON wurden mangels
  sinnvoller Einsatzmîglichkeit entfernt; stattdessen gibt es nun
  die Routinen SliceMouse und SliceMouseNext mit den Konstanten
  IDC_SLICE1, IDC_SLICE2, IDC_SLICE3 und IDC_SLICE4 sowie die
  Konstante IDC_PASTE
- bei der BubbleHelp und Alertboxen wird jetzt ein automatischer
  Umbruch durchgefÅhrt, so daû es keine Probleme mit den kleineren
  Auflîsungen mehr gibt
- ein Klick in einen Fensterdialog auûerhalb vom ROOT-Objekt wird
  nun korrekt weitergeleitet (es wird dann auch kein BEL ausgegeben)
- der '_SCP'-Cookie wird nicht mehr angelegt

Version 1.06 (09.01.1994, comp. mit PP vom 13.10.93)
- fÅr PP 1.1-Versionen Ñlteren Datums fehlten einige MultiTOS-
  Konstanten, so daû man ObjectGEM nicht compilieren konnte...

Version 1.05 (07.01.1994, comp. mit PP vom 13.10.93)
- Es ist soweit (tÑtÑtÑtÑÑÑ!): ObjectGEM wird ab sofort mit _allen_
  Quelltexten ausgeliefert!!! Das heiût aber _nicht_, daû nun die
  Registrierpflicht entfÑllt; ich hoffe, daû alle diejenigen, die
  eine Registrierung wg. PP-KompatibilitÑtsproblemen bisher abge-
  lehnt haben, sich eines besseren besinnen! Weitere (wichtige)
  Kommentare in LIESMICH und am Anfang des Quelltextes.
- neue Methode TWindow.WMRBoxCheck, mit der die Grîûe und die Form
  einer Rubbox kontrolliert werden kann
- InitGEM ruft die neue Methode TApplication.AutoFolder auf, wenn
  das Programm aus dem Auto-Ordner heraus gestartet wurde
- neue Konstanten KsNORMAL, CZE und HUN
- neue Felder TApplication.FPUAvailable, TApplication.OSBAvailable
- IsDesktopActive ist nun an MultiTOS angepaût
- DtoS beachtet den '_IDT'-Cookie
- die Unit Dos wird nicht mehr eingebunden
- es hat sich ein konzeptioneller Fehler in TApplication.MUKeybd
  ergeben: ein Tastendruck wird nun (korrekterweise) zunÑchst an
  die TEvent-Objekte des obersten Fensters weitergeleitet und erst
  danach an das Applikations-Objekt; dadurch wurden auûerdem énde-
  rungen am Dialog-Tastaturhandler nîtig - falls Probleme auftreten,
  bitte melden; ob auch die anderen MUxxxx-Methoden geÑndert werden,
  steht noch nicht fest

Version 1.04  (11.10.1993, comp. mit PP vom 30.06.93)
- Es ist vollbracht! Die Online-Hilfe ist komplett; ich denke,
  das warten hat sich gelohnt (Kommentare willkommen).
- der 'VSCR'-Cookie wird nun beachtet, d.h. bei virtuellen Bild-
  schirmen erscheinen Dialogboxen, bei denen ws_ex_Center gesetzt
  ist, automatisch im sichtbaren Bereich; Achtung: bei Dialog-
  boxen ist standardmÑûig ws_ex_CenterOnce gesetzt, d.h. nur beim
  ersten Aufruf wird der aktuelle Bereich ausgewertet; wenn man
  ein anderes Verhalten wÅnscht, muû man dieses Flag abÑndern
- Redraw-Probleme bei den Push-Buttons beseitigt
- vdi_fix korrigiert
- BootDevice liefert nur noch char zurÅck, d.h. der Doppelpunkt
  hinter der Laufwerksbezeichnung fehlt

Version 1.03  (25.07.1993, comp. mit PP vom 28.04.93)
- wenn der '_SCP'-Cookie noch nicht existiert, wird er von
  TApplication.Init angelegt (dient als Semaphor fÅr das Clipboard)
- wesentliche bessere UserDef-Farbdarstellung auf dem Falcon
- die PushButton-Darstellung wurde der des (Multi-)TOS angepaût
- neue Konstante cs_CancelOnClose
- jeder registrierte Anwender kann nun mittels eines persînlichen
  SchlÅssels aus einer Shareware-Version eine Vollversion machen
- Bugfixing erneut erfolgreich! Das Problem mit dem mehrmaligen
  Programmstart auf dem Falcon kam dadurch zustande, daû PP offen-
  sichtlich einen wind_new-Aufruf nicht mag... TApplication.ExitGEM
  macht ihn deshalb nicht mehr.

Version 1.02  (14.07.1993, comp. mit PP vom 28.04.93)
- Maushandling unter MultiTOS nun komplett
- neue Mauszeiger IDC_RUBBER, IDC_SCISSORS
- neue Konstante as_3DFlags (muû allerdings noch erweitert werden,
  da die 3D-Effekte fÅr UserDef-Objekte vom AES nicht korrekt ge-
  zeichnet werden...)
- Drag&Drop-Anfragen werden von TApplication.APDragDrop nun an
  WMDragDrop des zugehîrigen Fensters weitergeleitet bzw. an
  TApplication.HandleDragDrop, wenn kein Fenster ermittelt
  werden konnte (sollte allerdings nicht vorkommen)
- unter MultiTOS kînnen Fensterdialoge, bei denen cs_WorkBackground
  gesetzt ist, mit Doppelklick auf ein nicht anwÑhlbares Dialog-
  element in den Vordergrund geholt werden
- ist SpeedoGDOS aktiv, werden Fehlermeldungen nun unterdrÅckt;
  stattdessen kann mit TApplication.ChkSpeedoError ein evtl.
  aufgetretener Fehler abgefragt werden (0=kein Fehler)
- das Objekt TPXPictureValidator existiert nicht mehr
  (eine Åberarbeitete Fassung wird spÑter wieder eingefÅgt)
- ObjectGEM verwendet nun bei Popup-MenÅs und der Bubble-Help nach
  Mîglichkeit den AES-"Quarter Screen Buffer"
- der Fehler mit den Alertboxen etc. (s.u.) ist behoben!
  Wer wissen mîchte warum, lese sich PP_BUGS.TXT durch...
  Allerdings ist ein weiterer Fehler aufgetaucht, der sich
  darin Ñuûert, daû man auf dem Falcon unter PP kein ObjectGEM-
  Programm mehr als einmal starten kann... Bugfixing lÑuft erneut.

Version 1.01  (28.06.1993, comp. mit PP vom 28.04.93)
- Farbanpassung
- auf dem Falcon-TOS sind Fenster nun nicht mehr im Hinter-
  grund bedienbar (dies scheint _nur_ unter MultiTOS zu
  funktionieren!?)
- Drag&Drop-Anfragen werden von TApplication.APDragDrop
  standardmÑûig mit DD_NAK beantwortet
- Funktion ChangeCookie
- neuer Mauszeiger IDC_PENCIL
- es ex. z.Z. noch ein Fehler bei modalen Alert-/Dialogboxen,
  der BubbleHelp und Popups unter TOS 4.0x (Falcon); Bugfixing lÑuft...

Version 1.00  (10.06.1993, comp. mit PP vom 28.04.93)
- die im ST Magazin 7/93 angesprochene "Unschînheit" der
  UserDef-Buttons in den niedrigen Auflîsungen lÑût sich
  durch eine zweite (speziell fÅr diese Auflîsungen ange-
  fertigte) Resourcedatei umgehen, s. dazu auch LoadResource
  und InitResource
